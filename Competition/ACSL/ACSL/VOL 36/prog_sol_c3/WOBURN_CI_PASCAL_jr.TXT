(*
        Saiyam Patel
        Woburn Collegiate Institute
        ACSL 2013-2014, Contest #3
        Junior Division
        Program: Fanorona
*)

var
a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,x,y,s,t,u,v,v1,v2,w,ver,hor,up,down,left,right,up2,left2,right2,down2,rep:longint;
ar1: array [1..5,1..5] of longint;
ar2: array [1..5,1..5] of longint;
ar3: array [1..25] of longint;
ar4: array [1..25] of longint;
//ar5: array [1..25] of longint;
arup: array [1..3] of longint;
ardown: array [1..3] of longint;
arright: array [1..3] of longint;
arleft: array [1..3] of longint;
//arfinal: array [1..3] of longint;
arsemi1: array [1..3] of longint;
arsemi2: array [1..3] of longint;
arfinal2: array [1..3] of longint;

a2,b2,c2,d2,e2,f2,g2,h2:longint;

//ar6: array [1..12, 1..4,1..6] of longint;
//z: array [1..12,1..4] of longint;
//st:string;
begin

for o := 1 to 5 do begin

for i := 1 to 5 do
        for h := 1 to 5 do
                ar1[i,h]:=0;

read(a);
for i := 1 to a do
        begin
        read(b);
        d:=(b div 5) +1;
        if b mod 5 = 0 then d := d-1;
        f:=(b mod 5);
        if b mod 5 = 0 then f :=5;
        ar1[d,f] := 1;
        ar3[i] := b;
        end;
read(c);
for i := 1 to c do
        begin
        read(b);
        d:=(b div 5) +1;
        if b mod 5 = 0 then d := d-1;
        f := b mod 5;
        if b mod 5 = 0 then f :=5;
        ar1[d,f] := 2;
        ar4[i] := b;
        end;

for i := 1 to 5 do
        for h := 1 to 5 do
                if (ar1[i,h] <> 1) and (ar1[i,h] <> 2) then ar1[i,h] := 0;

{for i := 1 to 5 do
        for h := 1 to 5 do
                begin
                if h = 5 then writeln(ar1[i,h])
                else write(ar1[i,h]);
                end;}

v2:=0;

for y := 1 to a do
        begin
        e:=ar3[y];
        ver:=(e div 5) +1;
        if e mod 5 = 0 then ver:=ver-1;
        hor:=(e mod 5);
        if e = 5 then ver:=1;
        if hor = 0 then hor := 5;
        //writeln(ver,' ',hor);

        ///////////up move///////////////////////////////////////////////////
        x:=0;
        if (ar1[ver-1,hor] = 0) and (ar1[ver-2,hor] = 2) then
                begin
                i:=ver-1;
                h:=0;

                repeat
                        begin
                        i:=i-1;
                        if ar1[i,hor] <> 2 then
                                h:=h+1
                        else if (ar1[i,hor] = 2) and (h=0) and (i>0) then
                                begin
                                x:=x+1;
                                k:=((i-1) * 5);
                                if (hor mod 5 = 0) then k:=k+5;
                                l:= hor mod 5;
                                if hor mod 5 = 0 then l:=5;
                                arup[x] :=k+l;
                                end;
                        end;
                until (h<>0) or (i=1);
        end;


                i:=ver;

        if (ar1[ver+1,hor] = 2)  and (ar1[ver-1,hor] = 0) and (ver-1>0) then
                        begin
                        h:=0;
                        repeat
                                begin
                                i:=i+1;
                                if ar1[i,hor] <> 2 then
                                        h:=h+1
                                else if (ar1[i,hor] = 2) and (h=0) then
                                        begin
                                        x:=x+1;
                                        k:=((i-1) * 5);                                if (hor mod 5 = 0) then k:=k+5;
                                        if (hor mod 5 = 0) then k:=k+5;
                                        l:= hor mod 5;
                                        if hor mod 5 = 0 then l:=5;
                                        arup[x] :=k+l;
                                        end;
                                end;
                        until (i=5) or (h>0);
                        end;


////////////////up move done////////////////////////////////////////
////////////////down move start/////////////////////////////////////

        s:=0;
        //writeln(ver+1,' ',hor);
        if (ar1[ver+1,hor] = 0) and (ar1[ver+2,hor] = 2) then
                begin
                //writeln(ver+1,' ',hor);
                i:=ver+1;
                h:=0;

                repeat
                        begin
                        i:=i+1;
                        if ar1[i,hor] <> 2 then
                                h:=h+1
                        else if (ar1[i,hor] = 2) and (h=0) and (i<6) then
                                begin
                                s:=s+1;
                                k:=((i-1) * 5);
                                if (hor mod 5 = 0) then k:=k+5;
                                l:= hor mod 5;
                                if hor mod 5 = 0 then l:=5;
                                ardown[s] :=k+l;
                                end;
                        end;
                until (h<>0) or (i=1);
        end;


                i:=ver;

                if (ar1[ver-1,hor] = 2) and (ar1[ver+1,hor] = 0) and (ver+1 <6) then
                        begin
                        //writeln(ver-1,' ',hor);
                        h:=0;
                        repeat
                                begin
                                i:=i-1;
                                if ar1[i,hor] <> 2 then
                                        h:=h+1
                                else if (ar1[i,hor] = 2) and (h=0) then
                                        begin
                                        s:=s+1;
                                        k:=((i-1) * 5);
                                        if (hor mod 5 = 0) then k:=k+5;
                                        l:= hor mod 5;
                                        if hor mod 5 = 0 then l:=5;
                                        ardown[s] :=k+l;
                                        end;
                                end;
                        until (i=5) or (h>0);
                        end;

/////////////down move complete
/////////////right move start
        t:=0;
        if (ar1[ver,hor+1] = 0) and (ar1[ver,hor+2] = 2) then
                begin
                i:=hor+1;
                h:=0;

                repeat
                        begin
                        i:=i+1;
                        if ar1[ver,i] <> 2 then
                                h:=h+1
                        else if (ar1[ver,i] = 2) and (h=0) and (i<6) then
                                begin
                                t:=t+1;
                                k:=((ver-1) * 5);
                                if (i mod 5 = 0) then k:=k+5;
                                l:= i mod 5;
                                if i mod 5 = 0 then l:=0;
                                arright[t] :=k+l;
                                end;
                        end;
                until (h<>0) or (i=5);
        end;


                i:=hor;

                if (ar1[ver,hor-1] = 2) and (ar1[ver,hor+1] = 0) and (hor+1<6) then
                        begin
                        h:=0;
                        repeat
                                begin
                                i:=i-1;
                                if ar1[ver,i] <> 2 then
                                        h:=h+1
                                else if (ar1[ver,i] = 2) and (h=0) then
                                        begin
                                        t:=t+1;
                                        k:=((ver-1) * 5);                                if (hor mod 5 = 0) then k:=k+5;
                                        if (i mod 5 = 0) then k:=k+5;
                                        l:= i mod 5;
                                        if i mod 5 = 0 then l:=0;
                                        arright[t] :=k+l;
                                        end;
                                end;
                        until (i=0) or (h>0);
                        end;

///////////////right move complete
/////////left move start
        u:=0;
        if (ar1[ver,hor-1] = 0) and (ar1[ver,hor-2] = 2) then
                begin

                i:=hor-1;
                h:=0;
                repeat
                        begin
                        i:=i-1;
                        if (ar1[ver,i] <> 2) then
                                h:=h+1
                        else if (ar1[ver,i] = 2) and (h=0) and (i>0) then
                                begin
                                u:=u+1;
                                k:=((ver-1) * 5);
                                if (i mod 5 = 0) then k:=k+5;
                                l:= i mod 5;
                                if i mod 5 = 0 then l:=0;
                                arleft[u] :=k+l;
                                end;
                        end;
                until (h<>0) or (i=1);
        end;


                i:=hor;

                if (ar1[ver,hor+1] = 2) and (ar1[ver,hor-1] = 0) and (hor-1>0) then
                        begin

                        h:=0;
                        repeat
                                begin
                                i:=i+1;
                                if ar1[ver,i] <> 2 then
                                        h:=h+1
                                else if (ar1[ver,i] = 2) and (h=0) then
                                        begin

                                        u:=u+1;
                                        k:=((ver-1) * 5);                                if (hor mod 5 = 0) then k:=k+5;
                                        if (i mod 5 = 0) then k:=k+5;
                                        l:= i mod 5;
                                        if i mod 5 = 0 then l:=0;
                                        arleft[u] :=k+l;

                                        end;

                                end;
                        until (i=5) or (h<>0);
                        end;

//////////////left move complete
///////////// find the move that captures the most pieces
       v1:=0;
       //writeln(x,' ',s,' ',t,' ',u);

        if x > v1 then
                begin
                v1:=x;
                for i := 1 to x do
                        arsemi1[i] := arup[i];
                end;
        if s > v1 then
                begin
                v1:=s;
                for i := 1 to s do
                        arsemi1[i] := ardown[i];
                end;
        if t > v1 then
                begin
                v1:=t;
                for i := 1 to t do
                        arsemi1[i] := arright[i];
                end;
        if u > v1 then
                begin
                v1:=u;
                for i := 1 to u do
                        arsemi1[i] := arleft[i];
                end;

       if v1 > v2 then
                begin
                v2:=v1;
                for i := 1 to v1 do
                        arsemi2[i] := arsemi1[i];
                end;
        if y = a then
                begin
                if v2 = 0 then writeln('NONE')
                else
                        begin
                        ///sorting the output from smallest to biggest///

                        for a2 := 1 to v2 do
                                for b2 := 1 to v2 do
                                        begin
                                        if arsemi2[a2] < arsemi2[b2] then
                                                begin
                                                c2:=arsemi2[a2];
                                                arsemi2[a2] := arsemi2[b2];
                                                arsemi2[b2] := c2;
                                                end;
                                        end;


                        ///end sorting from smallest to biggest
                        for i := 1 to v2 do
                                if i <> v2 then write(arsemi2[i],', ')
                                else writeln(arsemi2[i]);
                        end;
                end;


end;

end;

readln;
readln;
end.
