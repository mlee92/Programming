{
    "collab_server" : "",
    "contents" : "library(\"quantmod\")\n\ngetSimpleMovingAvg <- function(tickerData, t_0, t_1){\n  #VARIABLES\n  PRICES <- NULL \n  RUNNING_SUM <- 0\n  DAYS <- NULL\n  AVGS <- NULL\n  \n  #CALCULATION\n  \n  for(time in t_0:t_1){\n    PRICES <- c(PRICES, tickerData[time])\n    RUNNING_SUM <- RUNNING_SUM + PRICES[time - t_0 + 1]\n    DAYS <- c(DAYS, time) \n    AVGS <- c(AVGS, as.double(RUNNING_SUM / (time - t_0 + 1)))\n  }\n  \n  df <- data.frame(DAYS, PRICES, AVGS)\n  return(df)\n}\n\ndispSimpleMovingAvg <- function(tickerData, title, t_0, t_1){\n  #VARIABLES\n  DF <- getSimpleMovingAvg(tickerData, t_0, t_1)\n  DAYS <- DF[, 1]\n  PRICES <- DF[, 2]\n  AVGS <- DF[, 3]\n  \n  MU_PRICES <- round(mean(PRICES))\n  MU_AVGS <- round(mean(AVGS))\n  \n  p_label <- paste(\"Daily mu = \", MU_PRICES)\n  r_label <- paste(\"Moving mu = \", MU_AVGS)\n\n    plot(DAYS, PRICES, main = title, xlab = \"DAY\", ylab = \"PRICE\", type = \"l\", col = \"red\", sub = \"Cumulative Average of Price with Equal Weight\")\n  lines(DAYS, AVGS, col = \"green\")\n  legend('topright', legend = c(p_label, r_label), col=c(\"red\", \"green\"), lty = 1:2, cex = 0.8)\n}\n\nlibrary(\"quantmod\")\n\"Returns a dataframe of the exponential moving average: where the moving average from t_0 to t_1 is calculated with exponential weight given to more recent quotes\"\n\ngetExpMovAvg <- function(tickerData, t_0, t_1, alpha){\n  #INIT VAR \n  PRICES <- NULL \n  DAYS <- NULL\n  AVGS <- NULL\n  \n  WEIGHT <- c(alpha, 1 - alpha)\n  \n  #first day\n  DAY <- 1 \n  PRICES <- c(PRICES, tickerData[t_0])\n  AVGS <- c(AVGS, PRICES[DAY])\n  DAYS <- c(DAYS, t_0)\n  \n  for(time in (t_0 + 1):t_1){\n    DAY <- DAY + 1 \n    P <- tickerData[time]\n    S <- P * WEIGHT[1] + AVGS[DAY - 1] * WEIGHT[2]\n    \n    PRICES <- c(PRICES, P)\n    AVGS <- c(AVGS, S)\n    DAYS <- c(DAYS, time)\n  }\n  \n  df <- data.frame(DAYS, PRICES, AVGS)\n  \n  #DEBUG\n  \n  #print(length(DAYS))\n  #print(length(PRICES))\n  #print(length(AVGS))\n  return(df)\n}\n\ndispExpMovingAvg <- function(tickerData, t_0, t_1, weight, title){\n  EXP_DF <- getExpMovAvg(tickerData, t_0, t_1, weight)\n  \n  DAYS <- EXP_DF$DAYS\n  PRICES <- EXP_DF$PRICES\n  AVGS <- EXP_DF$AVGS\n  \n  MU_P <- mean(PRICES, na.RM = TRUE)\n  MU_AVG <- mean(AVGS, na.RM = TRUE)\n  \n  \n  p_label <- paste(\"Daily mu = \", MU_P)\n  r_label <- paste(\"Moving mu = \", MU_AVG)\n  \n  plot(DAYS, PRICES, main = title, xlab = \"DAY\", ylab = \"PRICE\", type = \"l\", col = \"red\", sub = \"Cumulative Average of Price with Exponential Weight\")\n  lines(DAYS, AVGS, col = \"green\")\n  legend('topright', legend = c(p_label, r_label), col=c(\"red\", \"green\"), lty = 1:2, cex = 0.8)\n  \n}\n\ngetMovAvgDiff <- function(tickerData, type, t_0, t_1, alpha){\n  if(grepl(type, \"simple\")){\n    MovAvgDF <- getSimpleMovingAvg(tickerData, t_0, t_1)\n  } else if(grepl(type, \"exp\")){\n    MovAvgDF <- getExpMovAvg(tickerData, t_0, t_1, alpha)\n  }\n  DAYS <- MovAvgDF$DAYS\n  PRICES <- MovAvgDF$PRICES\n  AVGS <- MovAvgDF$AVGS\n  DIFF <- NULL\n  for(time in 1:length(DAYS)){\n    DIFF <- c(DIFF, AVGS[time] - PRICES[time])\n  }\n  \n  df <- data.frame(DAYS, PRICES, AVGS, DIFF)\n  return(df)\n}\n\ndispMovAvgDiff <- function(tickerData, type, t_0, t_1, weight, title){\n  DiffDF <- getMovAvgDiff(tickerData, type, t_0, t_1, weight)\n  \n  DAYS <- DiffDF$DAYS\n  PRICES <- DiffDF$PRICES\n  AVGS <- DiffDF$AVGS\n  DIFF <- DiffDF$DIFF\n  \n  MU_DIFF <- mean(DIFF, na.RM = TRUE)\n  \n  d_label <- paste(\"Differential mu = \", MU_DIFF)\n  sub_label <- paste(\"Difference between moving\", type, \"avg and price\")\n  plot(DAYS, DIFF, main = title, xlab = \"DAY\", ylab = \"PRICE DIFFERENCE\", type = \"l\", col = \"purple\", sub = sub_label)\n  legend('topright', legend = c(d_label), col=c(\"purple\"), lty = 1:2, cex = 0.8)\n}\n\n\ndispAllMovAvgs <- function(tickerData, t_0, t_1, weight, title){\n  DAYS <- t_0:t_1\n  SMP <- getSimpleMovingAvg(tickerData, t_0, t_1)$AVGS\n  EXP <- getExpMovAvg(tickerData, t_0, t_1, weight)$AVGS\n  PRC <- tickerData[t_0:t_1]\n  \n  MU_P <- mean(PRC, na.rm = TRUE)\n  MU_SMP <- mean(SMP, na.rm = TRUE)\n  MU_EXP <- mean(EXP, na.rm = TRUE)\n  \n  p_label <- paste(\"Daily mu = \", MU_P)\n  s_label <- paste(\"Simple mu = \", MU_SMP)\n  e_label <- paste(\"Exponential mu = \", MU_EXP)\n  \n  plot(DAYS, PRC, main = title, xlab = \"DAY\", ylab = \"PRICE\", type = \"l\", col = \"red\", sub = \"Cumulative Average of Price with Simple and Exponential Weight\")\n  lines(DAYS, SMP, col = \"green\")\n  lines(DAYS, EXP, col = \"purple\")\n  legend('topright', legend = c(p_label, s_label, e_label), col=c(\"red\", \"green\", \"purple\"), lty = 1:2, cex = 0.8)\n  \n  \n}",
    "created" : 1463147160448.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3521524848",
    "id" : "CC1AE1DB",
    "lastKnownWriteTime" : 1463265966,
    "last_content_update" : 1463265966322,
    "path" : "~/Documents/Projects/Silvermore/Modules/MovingAvg.R",
    "project_path" : "Modules/MovingAvg.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}